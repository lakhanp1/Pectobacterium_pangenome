---
title: "Visualize tandem HG matches on pangenome"
date: "`r Sys.time()`"
format: 
  html: 
    embed-resources: true
    df-print: paged
knitr: 
  opts_chunk:
    fig.height: 7
---

## Initial setup

```{r}
#| label: setup
#| warning: false

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(ape))
suppressPackageStartupMessages(library(treeio))
suppressPackageStartupMessages(library(ggtree))
suppressPackageStartupMessages(library(org.Pectobacterium.spp.pan.eg.db))

rm(list = ls())

source("https://raw.githubusercontent.com/lakhanp1/omics_utils/main/RScripts/utils.R")
source("scripts/utils/config_functions.R")
source("scripts/utils/phylogeny_functions.R")
source("scripts/utils/homology_groups.R")
source("scripts/utils/heatmap_utils.R")
################################################################################
set.seed(124)

confs <- prefix_config_paths(
  conf = suppressWarnings(configr::read.config(file = "project_config.yaml")),
  dir = "."
)

hgSets <- list(
  hg_comb_2 = c("hg_22427604", "hg_22426818", "hg_22427603"),
  hg_comb_3 = c("hg_22427604", "hg_22426828", "hg_22431676", "hg_22431685", "hg_22427603"),
  hg_comb_5 = c("hg_22427604", "hg_22426817", "hg_22426799", "hg_22427603")
)

outDir <- confs$analysis$ctv$dir

pangenome <- confs$data$pangenomes$pectobacterium.v2$name
panConf <- confs$data$pangenomes[[pangenome]]
panOrgDb <- org.Pectobacterium.spp.pan.eg.db
prophageLenCutoff <- confs$analysis$prophages$cutoff_length
treeMethod <- "core_snp_ml"     #ani_upgma, kmer_nj

```

## Import data

```{r}
sampleInfo <- get_metadata(file = panConf$files$metadata, genus = confs$genus)

sampleInfoList <- as.list_metadata(
  df = sampleInfo, sampleId, sampleName, SpeciesName, strain, nodeLabs, genomeId 
)

rawTree <- import_tree(
  confs$analysis$phylogeny[[treeMethod]]$files$tree_rooted,
  phylo = TRUE
)

rawTree <- ape::ladderize(rawTree, right = FALSE)

speciesOrder <- suppressMessages(
  readr::read_tsv(confs$analysis$phylogeny[[treeMethod]]$files$species_order)
)

if(is.null(names(hgSets))){
  names(hgSets) <- paste("s", 1:length(hgSets), sep = "")
}
```

## Identify the genomes on which HGs were mapped in tandem

```{r}
# extract tandem HG matches
matchedGenomes <- purrr::map(
  .x = hgSets,
  .f = \(hgs) tandem_hg_match(hgs = hgs, pandb = panOrgDb)
)

genomeHgSets <- purrr::map(
  .x = matchedGenomes,
  .f = function(x){
    tibble::tibble(genomeId = x)
  }
) %>% 
  purrr::list_rbind(names_to = "hg_set") %>% 
  dplyr::mutate(value = "y")

# add type strains to provide more context
typeStrainIds <- dplyr::filter(sampleInfo, !is.na(type_material)) %>%
  dplyr::slice(1, .by = SpeciesName) %>% 
  dplyr::pull(genomeId)

genomesToShow <- union(genomeHgSets$genomeId, typeStrainIds)
```

## Plot the phylogenetic tree with HG set annotation heatmap

```{r}

sampleInfo <- dplyr::left_join(
  x = tibble::tibble(genomeId = genomesToShow),
  y = sampleInfo, by = "genomeId"
)
subTree <- ape::keep.tip(phy = rawTree, tip = genomesToShow)

## add data to tree
treeTbl <- tidytree::as_tibble(subTree) %>%
  dplyr::full_join(y = sampleInfo, by = c("label" = "genomeId")) %>%
  treeio::as.treedata()

pt_tree <- ggtree::ggtree(subTree, ladderize = FALSE)
treeTipOrder <- ggtree::get_taxa_name(pt_tree)

longestBranch <- which(pt_tree$data$x == max(pt_tree$data$x))
pt_tree$data$x[longestBranch] <- 0.47

```

```{r}

pt_tree2 <- pt_tree +
  theme_tree() +
  geom_treescale(
    x = 0.01, y = nrow(sampleInfo) * 0.95,
    fontsize = 8, linesize = 2, offset = 4
  ) +
  scale_y_continuous(expand=c(0, 10)) +
  ggtree::geom_tiplab(
    mapping = aes(label = NA),
    align = TRUE, linesize = 0.4
  )

spKeyDf <- get_species_key_data(
  genomes = sampleInfo$genomeId, speciesInfo = sampleInfo, type = 'wide'
) %>% 
  tibble::as_tibble(rownames = "genomeId") %>%
  tidyr::pivot_longer(
    cols = -genomeId,
    names_to = 'SpeciesName', values_to = "species"
  ) %>%
  dplyr::mutate(
    SpeciesName = forcats::fct_relevel(SpeciesName, !!!rev(speciesOrder$SpeciesName)),
    SpeciesName = forcats::fct_drop(SpeciesName)
  )

pt_tree3 <- pt_tree2 +
  # HG set
  ggtreeExtra::geom_fruit(
    geom = geom_tile, data = genomeHgSets,
    mapping = aes(y = genomeId, x = hg_set, fill = value),
    pwidth = 0.1, width = 0.01,
    offset = 0.03,
    axis.params = list(axis = "x", text.size = 4, hjust = 1, text.angle = 45)
  ) +
  scale_fill_manual(
    name = "HG match",
    values = c("black", alpha("white", 1)),
    breaks = c("y", "n"),
    labels = c("Y", "N"),
    na.value = alpha("white", 1),
    guide = guide_legend(override.aes = list(size = 6), order = 2),
    na.translate = FALSE
  ) +
  ggnewscale::new_scale_fill() +
  # species key
  ggtreeExtra::geom_fruit(
    geom = geom_tile, data = spKeyDf,
    mapping = aes(y = genomeId, x = SpeciesName, fill = species),
    # axis.params = list(axis = "x", text.size = 2, text.angle = 45, vjust = 1),
    pwidth = 0.2, offset = 0.03
  ) +
  scale_fill_manual(
    values = c("0" = "grey95", "1" = "black"),
    na.value = "grey95",
    guide = "none"
  ) +
  theme(
    legend.position = c(0.05, 0.80),
    legend.justification = c(0, 1),
    legend.box = "vertical",
    legend.text = element_text(size = 16),
    # axis.title.x = element_text(hjust = 1),
    legend.title = element_text(size = 18, face = "bold")
  )

```

```{r}
#| column: page 
#| fig-height: 8
#| fig-width: 8
#| out-width: '100%'
#| layout-valign: top
#| echo: false

ggsave(plot = pt_tree3, filename = paste(outDir, "/hgset_pav.pdf", sep = ""), width = 8, height = 10)

pt_tree3

```

Species key in the above figure marks the species on tree from left to right:
`r paste(levels(spKeyDf$SpeciesName), collapse = ", ")`.

