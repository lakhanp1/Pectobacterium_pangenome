---
title: "Prophage clustering using syntenic Jaccard index"
author: "Lakhansing Pardeshi"
date: "`r Sys.Date()`"
format: 
  html: 
    embed-resources: true
    df-print: paged
knitr: 
  opts_chunk:
    fig.height: 7
---

This script cluster prophages using syntenic Jaccard index distance.

## Initial setup

```{r}
#| label: setup
#| warning: false

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(magrittr))
suppressPackageStartupMessages(library(igraph))
suppressPackageStartupMessages(library(apcluster))
suppressPackageStartupMessages(library(dendextend))
suppressPackageStartupMessages(library(ComplexHeatmap))
suppressPackageStartupMessages(library(ape))
suppressPackageStartupMessages(library(logger))
suppressPackageStartupMessages(library(configr))

# cluster prophages to get representative phages

rm(list = ls())

source("https://raw.githubusercontent.com/lakhanp1/omics_utils/main/RScripts/utils.R")
source("scripts/utils/config_functions.R")
source("scripts/utils/homology_groups.R")
source("scripts/utils/genome_comparison.R")
################################################################################
set.seed(124)

confs <- prefix_config_paths(
  conf = suppressWarnings(configr::read.config(file = "project_config.yaml")),
  dir = "."
)

pangenome <- confs$data$pangenomes$pectobacterium.v2$name
panConf <- confs$data$pangenomes[[pangenome]]
prophageLenCutoff <- confs$analysis$prophages$cutoff_length

outDir <- confs$analysis$prophages$preprocessing$dir
```

## Import data

```{r}
sampleInfo <- get_metadata(file = panConf$files$metadata, genus = confs$genus)

sampleInfoList <- as.list_metadata(
  df = sampleInfo, sampleId, sampleName, SpeciesName, strain, nodeLabs, genomeId
)

phages <- suppressMessages(
  readr::read_tsv(confs$analysis$prophages$preprocessing$files$filtered_prophages)
) %>% 
  dplyr::select(prophage_id, prophage_length, nHg, genomeId)

simDf <- suppressMessages(
  readr::read_tsv(confs$analysis$prophages$preprocessing$files$phage_relationships)
)

mashMat <- suppressMessages(
  readr::read_tsv(confs$analysis$prophages$preprocessing$files$mash_dist)
) %>% 
  tibble::column_to_rownames(var = "prophage_id") %>%
  as.matrix()

mashMat <- mashMat[phages$prophage_id, phages$prophage_id]

mashUpgma <- ape::read.tree(confs$analysis$prophages$preprocessing$files$mash_upgma)
```

## Process syntenic Jaccard similarity and MASH distance data 

```{r}
# process data
phageCmpDf <- dplyr::bind_rows(
  simDf,
  dplyr::rename(simDf, p2 = phage1, p1 = phage2) %>% 
    dplyr::rename(phage1 = p1, phage2 = p2)
)

jaccardMat <- tidyr::pivot_wider(
  phageCmpDf,
  id_cols = phage1,
  names_from = phage2,
  values_from = jaccardIndex
) %>% 
  tibble::column_to_rownames(var = "phage1") %>% 
  as.matrix()

jaccardMat <- jaccardMat[phages$prophage_id, phages$prophage_id]

if (all(is.na(diag(jaccardMat)))) {
  diag(jaccardMat) <- 1
}

if (!isSymmetric(jaccardMat)) {
  stop("pairwise Jaccard index matrix is not symmetric")
}

quantile(jaccardMat, c(0, 0.25, 0.5, 0.75, seq(0.9, 0.99, by = 0.01), 0.995, 1))
```

## Hierarchical clustering of Jaccard similarity

```{r}
jacDistMat <- max(jaccardMat)-jaccardMat

phageHc <- hclust(as.dist(jacDistMat), method = "complete")
# plot(phageHc, hang = -1)

phageDend <- as.dendrogram(phageHc) %>% 
  dendextend::ladderize()

phageDend %>% dendextend::get_nodes_attr("height") %>% hist()
# dendextend::cutree(as.dendrogram(blacl), h = 0.8) %>% table()

phagePhylo <- ape::as.phylo(phageDend)

```


```{r}
#| fig-height: 10
#| fig-width: 7
#| out-width: '100%'
#| layout-valign: top

rev(phageDend) %>%
  plot(
    horiz = TRUE,
    main = "Hierarchical clustering of syntenic Jaccard distance"
  )
```

## Visualize the clusters with data

### Syntenic Jaccard distance 

```{r}
colorJaccard <- list(
  breaks = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.97, 1),
  colors = viridisLite::viridis(n = 13, option = "magma")
)

ht_jaccard <- plot_species_ANI_heatmap(
  mat = jaccardMat,
  phy = phagePhylo,
  name = "jaccard",
  column_title = "Syntenic Jaccard index",
  col = circlize::colorRamp2(
    breaks = colorJaccard$breaks, colors = colorJaccard$colors
  ),
  heatmap_legend_param = list(
    direction = "horizontal", legend_width = unit(5, "cm")
  ),
  use_raster = TRUE, raster_quality = 3
)


```

```{r}
#| echo: false
#| column: page 
#| fig-height: 8
#| fig-width: 10 
#| out-width: '100%'
#| layout-valign: top

ComplexHeatmap::draw(
  ht_jaccard,
  heatmap_legend_side = "bottom"
)
```

### Add MASH distance heatmap

```{r}

colorMash <- list(
  breaks = c(0, 0.03, 0.05, 0.1, 0.15, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 1),
  colors = viridisLite::viridis(n = 13, option = "magma")
)

ht_mash <- plot_species_ANI_heatmap(
  mat = mashMat,
  phy = phagePhylo,
  name = "mash",
  column_title = "MASH distance",
  col = circlize::colorRamp2(
    breaks = colorMash$breaks, colors = colorMash$colors
  ),
  heatmap_legend_param = list(
    direction = "horizontal", legend_width = unit(5, "cm")
  ),
  use_raster = TRUE, raster_quality = 3
)

htList <- ht_jaccard + ht_mash

```


```{r}
#| echo: false
#| column: page 
#| fig-height: 8
#| fig-width: 15 
#| out-width: '200%'
#| layout-valign: top

pdf(
  file = file.path(outDir, "prophage_jaccard_clustering.pdf"),
  width = 16, height = 8
)
ComplexHeatmap::draw(
  htList,
  main_heatmap = "jaccard",
  row_dend_side = "left",
  heatmap_legend_side = "bottom"
)

dev.off()

ComplexHeatmap::draw(
  htList,
  main_heatmap = "jaccard",
  row_dend_side = "left",
  heatmap_legend_side = "bottom"
)
```

## Cut tree to generate clusters

```{r}
phageGroups <- dendextend::cutree(tree = phageDend, h = 0.7) %>% 
  tibble::enframe(name = "prophage_id", value = "proGrp") %>% 
  dplyr::mutate(
    proGrp = paste("proGrp", proGrp, sep = "")
  ) %>%
  dplyr::left_join(phages, by = "prophage_id")

representatives <- dplyr::group_by(phageGroups, proGrp) %>% 
  dplyr::add_count(name = "clusterSize") %>% 
  dplyr::arrange(desc(prophage_length)) %>% 
  dplyr::slice(1L) %>% 
  dplyr::ungroup() %>% 
  dplyr::mutate(clusterCenter = 1) %>% 
  dplyr::select(prophage_id, clusterCenter, clusterSize) %>% 
  dplyr::arrange(desc(clusterSize))

phageGroups <- dplyr::left_join(
  phageGroups, representatives, by = "prophage_id"
) %>% 
  tidyr::replace_na(list(clusterCenter = 0)) %>% 
  dplyr::select(prophage_id, proGrp, clusterCenter) %>% 
  dplyr::group_by(proGrp) %>% 
  dplyr::add_count(name = "clusterSize")


readr::write_tsv(
  phageGroups, file = confs$analysis$prophages$files$representatives
)
```

What is the vairation in genome ANI of the phages in the same group?

### Draw figures again with representatives

```{r}
repDend <- hclust(
  as.dist(
    jacDistMat[representatives$prophage_id, representatives$prophage_id]
  ),
  method = "complete"
)

ht_jaccardRep <- plot_species_ANI_heatmap(
  mat = jaccardMat[representatives$prophage_id, representatives$prophage_id],
  phy = repDend,
  name = "jaccard",
  column_title = "Syntenic Jaccard index for representative prophages",
  col = circlize::colorRamp2(
    breaks = colorJaccard$breaks, colors = colorJaccard$colors
  ),
  heatmap_legend_param = list(
    direction = "horizontal", legend_width = unit(5, "cm")
  ),
  use_raster = TRUE, raster_quality = 3
)

ht_mashRep <- plot_species_ANI_heatmap(
  mat = mashMat[representatives$prophage_id, representatives$prophage_id],
  phy = repDend,
  name = "mash",
  column_title = "MASH distance",
  col = circlize::colorRamp2(
    breaks = colorMash$breaks, colors = colorMash$colors
  ),
  heatmap_legend_param = list(
    direction = "horizontal", legend_width = unit(5, "cm")
  ),
  use_raster = TRUE, raster_quality = 3
)

htListRep <- ht_jaccardRep + ht_mashRep
```

```{r}
#| echo: false
#| column: page 
#| fig-height: 8
#| fig-width: 15 
#| out-width: '200%'
#| layout-valign: top

ComplexHeatmap::draw(
  htListRep,
  main_heatmap = "jaccard",
  row_dend_side = "left",
  heatmap_legend_side = "bottom"
)
```


