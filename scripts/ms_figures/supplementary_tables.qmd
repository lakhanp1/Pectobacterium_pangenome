---
title: "Supplementary tables"
author: "Lakhansing Pardeshi"
date: "`r Sys.Date()`"
format: 
  html: 
    embed-resources: true
    df-print: paged
knitr: 
  opts_chunk:
    fig.height: 7
---


```{r}
#| label: setup
#| echo: false
#| warning: false

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(org.Pectobacterium.spp.pan.eg.db))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(openxlsx))

rm(list = ls())

source("https://raw.githubusercontent.com/lakhanp1/omics_utils/main/RScripts/utils.R")
source("scripts/utils/config_functions.R")
source("scripts/utils/homology_groups.R")

################################################################################
set.seed(124)

confs <- prefix_config_paths(
  conf = suppressWarnings(configr::read.config(file = "project_config.yaml")),
  dir = "."
)

pangenome <- confs$data$pangenomes$pectobacterium.v2$name
panConf <- confs$data$pangenomes[[pangenome]]

panOrgDb <- org.Pectobacterium.spp.pan.eg.db

## write tables to excel file
wb <- openxlsx::createWorkbook()
```

::: {.panel-tabset}

## Table S1

Metadata for all the genome in the current pangenome

```{r}
#| echo: false
#| column: screen-inset-right

metadata <- suppressMessages(readr::read_csv(panConf$files$metadata)) %>% 
  dplyr::select(-starts_with("nodepath."), -Genome) %>% 
  dplyr::select(genomeId, source, everything())

currentSheet <- "Table_S1"
openxlsx::addWorksheet(wb, sheetName = currentSheet)
openxlsx::writeData(
  wb = wb, sheet = currentSheet,
  x = paste("## Table S1: Metadata for all the genome in the current pangenome")
)
openxlsx::writeDataTable(
  wb = wb, x = metadata, sheet = currentSheet,
  startCol = 1, startRow = 2, withFilter = TRUE,
  keepNA = TRUE, na.string = "NA",
  
)
openxlsx::freezePane(wb = wb, sheet = currentSheet, firstActiveRow = 3, firstActiveCol = 2)

DT::datatable(
  data = metadata,
  rownames = FALSE,
  filter = "top",
  class = 'compact hover',
  extensions = c('KeyTable', 'Scroller', 'Select', 'SearchBuilder', 'FixedColumns'),
  options = list(
    autoWidth = FALSE,
    dom = 'Qlfrtip',
    scrollX = TRUE,
    fixedColumns = list(leftColumns = 2),
    keys = TRUE,
    scroller = TRUE,
    scrollY = 600
  ),
  selection = 'none'
)

```


## Table S2

Pangenome statistics: Homology group counts for the genus pangenome and 
individual species pangenome

```{r}
#| echo: false
#| column: screen-inset-right

hg_stats <- suppressMessages(
  readr::read_tsv(confs$analysis$homology_groups$files$spp_group_stats)
) %>% 
  dplyr::rename(
    HGs_per_class = count,
    HGs_pangenome = nHgs
  )

currentSheet <- "Table_S2"
openxlsx::addWorksheet(wb, sheetName = currentSheet)
openxlsx::writeData(
  wb = wb, sheet = currentSheet,
  x = paste("## Table S2: Pangenome statistics: Homology group counts for the genus pangenome",
            "and individual species pangenome")
)
openxlsx::writeDataTable(
  wb = wb, x = hg_stats, sheet = currentSheet,
  startCol = 1, startRow = 2, withFilter = TRUE,
  keepNA = TRUE, na.string = "NA",
  
)
openxlsx::freezePane(wb = wb, sheet = currentSheet, firstActiveRow = 3, firstActiveCol = 2)

DT::datatable(
  data = hg_stats,
  rownames = FALSE,
  filter = "top",
  class = 'compact hover',
  extensions = c('KeyTable', 'Scroller', 'Select', 'SearchBuilder', 'FixedColumns'),
  options = list(
    autoWidth = FALSE,
    dom = 'Qlfrtip',
    scrollX = TRUE,
    fixedColumns = list(leftColumns = 2),
    keys = TRUE,
    scroller = TRUE,
    scrollY = 600
  ),
  selection = 'none'
)

```


## Table S3

GO enrichment for core, accessory and unique homology groups with respect to
the pangenome background

```{r}
#| echo: false
#| column: screen-inset-right

go_table <- suppressMessages(
  readr::read_tsv(confs$analysis$homology_groups$files$spp_group_go)
) %>% 
  dplyr::filter(SpeciesName == "pangenome") %>% 
  dplyr::select(-SpeciesName, -subpan_class)

currentSheet <- "Table_S3"
openxlsx::addWorksheet(wb, sheetName = currentSheet)
openxlsx::writeData(
  wb = wb, sheet = currentSheet,
  x = paste("## Table S3: GO enrichment for core, accessory and unique homology groups",
            "with respect to the pangenome background")
)
openxlsx::writeDataTable(
  wb = wb, x = go_table, sheet = currentSheet,
  startCol = 1, startRow = 2, withFilter = TRUE,
  keepNA = TRUE, na.string = "NA",
  
)
openxlsx::freezePane(wb = wb, sheet = currentSheet, firstActiveRow = 3, firstActiveCol = 2)

DT::datatable(
  data = go_table,
  rownames = FALSE,
  filter = "top",
  class = 'compact hover',
  extensions = c('KeyTable', 'Scroller', 'Select', 'SearchBuilder', 'FixedColumns'),
  options = list(
    autoWidth = FALSE,
    dom = 'Qlfrtip',
    scrollX = TRUE,
    fixedColumns = list(leftColumns = 2),
    keys = TRUE,
    scroller = TRUE,
    scrollY = 600
  ),
  selection = 'none'
)
```

## Table S4

Species wise and pangenome wide prophage statistics

```{r}
#| echo: false
#| column: screen-inset-right

phage_stats <- suppressMessages(
  readr::read_tsv(confs$analysis$prophages$summary$files$prophage_stats_species)
) %>% 
  dplyr::rename(
    n_phages = n_vir_sp,
    phages_per_genome = mean_vir_per_g,
    HG_core = core,
    HG_accessory = accessory,
    HG_unique = unique,
    HG_total = total,
    HG_phage = phage_nHgs.total,
    phage_HG_ratio = phageRatio.total,
    phage_HG_core = phage_nHgs.core,
    phage_HG_accessory = phage_nHgs.accessory,
    phage_HG_unique = phage_nHgs.unique
  ) %>% 
  dplyr::select(-dplyr::starts_with("phageRatio."))

currentSheet <- "Table_S4"
openxlsx::addWorksheet(wb, sheetName = currentSheet)
openxlsx::writeData(
  wb = wb, sheet = currentSheet,
  x = paste("## Tabls S4: Species wise and pangenome wide prophage statistics")
)
openxlsx::writeDataTable(
  wb = wb, x = phage_stats, sheet = currentSheet,
  startCol = 1, startRow = 2, withFilter = TRUE,
  keepNA = TRUE, na.string = "NA",
  
)
openxlsx::freezePane(wb = wb, sheet = currentSheet, firstActiveRow = 3, firstActiveCol = 2)

DT::datatable(
  data = phage_stats,
  rownames = FALSE,
  filter = "top",
  class = 'compact hover',
  extensions = c('KeyTable', 'Scroller', 'Select', 'SearchBuilder', 'FixedColumns'),
  options = list(
    autoWidth = FALSE,
    dom = 'Qlfrtip',
    scrollX = TRUE,
    fixedColumns = list(leftColumns = 2),
    keys = TRUE,
    scroller = TRUE,
    scrollY = 600
  ),
  selection = 'none'
)

```

## Table S5

geNomad prophage prediction result summary for 454 genomes

```{r}
#| echo: false
#| column: screen-inset-right

prophages <- suppressMessages(readr::read_tsv(confs$data$prophages$files$data)) %>% 
  dplyr::mutate(
    integrated = dplyr::if_else(
      condition = is.na(start) & is.na(end), true = "N", false = "Y" 
    )
  ) %>%
  dplyr::select(prophage_id, genomeId, everything()) %>% 
  dplyr::relocate(integrated, .after = end)

currentSheet <- "Table_S5"
openxlsx::addWorksheet(wb, sheetName = currentSheet)
openxlsx::writeData(
  wb = wb, sheet = currentSheet,
  x = paste("## Table S5: geNomad prophage prediction result summary for 454 genomes")
)
openxlsx::writeDataTable(
  wb = wb, x = prophages, sheet = currentSheet,
  startCol = 1, startRow = 2, withFilter = TRUE,
  keepNA = TRUE, na.string = "NA",
  
)
openxlsx::freezePane(wb = wb, sheet = currentSheet, firstActiveRow = 3, firstActiveCol = 2)

DT::datatable(
  data = prophages,
  rownames = FALSE,
  filter = "top",
  class = 'compact hover',
  extensions = c('KeyTable', 'Scroller', 'Select', 'SearchBuilder', 'FixedColumns'),
  options = list(
    autoWidth = FALSE,
    dom = 'Qlfrtip',
    scrollX = TRUE,
    fixedColumns = list(leftColumns = 2),
    keys = TRUE,
    scroller = TRUE,
    scrollY = 600
  ),
  selection = 'none'
)

```

## Table S6

Prophage clustering based on syntenic Jaccard index

```{r}
#| echo: false
#| column: screen-inset-right

phage_grps <- suppressMessages(
  readr::read_tsv(confs$analysis$prophages$files$clusters)
) %>% 
  dplyr::select(-starts_with("nodepath."))

currentSheet <- "Table_S6"
openxlsx::addWorksheet(wb, sheetName = currentSheet)
openxlsx::writeData(
  wb = wb, sheet = currentSheet,
  x = paste("## Table S6: Prophage clustering based on syntenic Jaccard index")
)
openxlsx::writeDataTable(
  wb = wb, x = phage_grps, sheet = currentSheet,
  startCol = 1, startRow = 2, withFilter = TRUE,
  keepNA = TRUE, na.string = "NA",
  
)
openxlsx::freezePane(wb = wb, sheet = currentSheet, firstActiveRow = 3, firstActiveCol = 2)

DT::datatable(
  data = phage_grps,
  rownames = FALSE,
  filter = "top",
  class = 'compact hover',
  extensions = c('KeyTable', 'Scroller', 'Select', 'SearchBuilder', 'FixedColumns'),
  options = list(
    autoWidth = FALSE,
    dom = 'Qlfrtip',
    scrollX = TRUE,
    fixedColumns = list(leftColumns = 2),
    keys = TRUE,
    scroller = TRUE,
    scrollY = 600
  ),
  selection = 'none'
)
```

:::

```{r}
#| echo: false

# save all table to Excel file
openxlsx::saveWorkbook(
  wb = wb, overwrite = TRUE,
  file = file.path(confs$data$reference_data$dir, "ms_prophages_supplementary_data.xlsx")
)

```

